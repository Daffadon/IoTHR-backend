version: "3.8"

services:
  be-app:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - backend-network
    ports:
      - "8000:8000"
    depends_on:
      - mongo-dev
      - mongo-express
    restart: always

  mongo-dev:
    container_name: mongo-dev
    image: mongo:4.2
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${DATABASE}
    networks:
      - backend-network
    volumes:
      - ./backend-data:/data/db
      - ./mongod.conf:/etc/mongod.conf
    command: mongod --config /etc/mongod.conf
    restart: always

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    depends_on:
      - mongo-dev
    networks:
      - backend-network
    environment:
      - ME_CONFIG_MONGODB_SERVER=${MONGODB_SERVER}
      - ME_CONFIG_BASICAUTH_USERNAME=${BASICAUTH_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${BASICAUTH_PASSWORD}
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_ADMINUSERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_ADMINPASSWORD}
      - ME_CONFIG_MONGODB_DATABASE=${MONGODB_DATABASE}
    ports:
      - "8081:8081"
    volumes:
      - ./backend-data:/data/db
      - ./wait-for-it.sh:/app/wait-for-it.sh
    command:
      [
        "sh",
        "-c",
        "chmod +x /app/wait-for-it.sh && /app/wait-for-it.sh mongo-dev:27017 -- /docker-entrypoint.sh",
      ]
    restart: always
networks:
  backend-network:
    external: true
